// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id         String      @id @default(uuid())
  name       String
  userId     String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  billboards Billboard[] @relation("StoreToBillboard")
  categories Category[]  @relation("StoreCategory")
  sizes      Size[]      @relation("StoreSize")
  colors     Color[]      @relation("StoreColor")
}

model Billboard {
  id         String   @id @default(uuid())
  storeId    String
  label      String
  imageUrl   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  store      Store    @relation("StoreToBillboard", fields: [storeId],references: [id])
  categories Category[]

  @@index([storeId])
}

model Category {
  id          String    @id @default(uuid())
  storeId     String
  billboardId String
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  store       Store     @relation("StoreCategory", fields: [storeId],references: [id])
  billboard   Billboard @relation(fields: [billboardId],references: [id])

  @@index([storeId])
  @@index([billboardId])
}

model Size {
  id          String    @id @default(uuid())
  storeId     String
  name        String
  value       String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  store       Store     @relation("StoreSize",fields: [storeId],references: [id])

  @@index([storeId])
}

model Color {
  id          String    @id @default(uuid())
  storeId     String
  name        String
  value       String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  store       Store     @relation("StoreColor",fields: [storeId],references: [id])

  @@index([storeId])
}